<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="FileContentsTemplate" xml:space="preserve">
        <value>namespace {0}
{{
    using System;
    using System.Collections.ObjectModel;
    using System.Data;
    using System.Threading;
    using System.Threading.Tasks;
    using MicroDotNet.Packages.Orm.DatabaseAbstraction;

    public partial class {1}
    {{
        public async Task&lt;object&gt; ExecuteScalar(
            IDatabaseConnection connection,
            CancellationToken cancellationToken)
        {{
            var commandText = {1}.CommandText;
            var commandType = {1}.CommandType;
            var parametersCollection = this.Parameters.ExtractParameters();
            var result = await connection.ExecuteScalarAsync(
                commandText,
                commandType,
                parametersCollection,
                cancellationToken)
                .ConfigureAwait(false);

            return result;
        }}
    }}
}}</value>
    </data>
</root>