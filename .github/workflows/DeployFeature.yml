name: Deploy feature package

on:
  workflow_dispatch:
    inputs:
      version_suffix:
        description: Suffix for package version
        required: true
        type: string

permissions:
  id-token: write
  contents: read
  checks: write

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

jobs:
  build-and-test:
    name: Build and test code
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build code
      run: dotnet build --no-restore --configuration Debug

    - name: Run tests
      run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage"

    - name: Publish test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: DotNet tests
        path: "**/test-results.trx"
        reporter: dotnet-trx
        fail-on-error: true 

  package:
    name: Create packages
    runs-on: ubuntu-latest
    needs: [ build-and-test ]

    steps:
    - uses: actions/checkout@v4

    - name: Load .env
      uses: falti/dotenv-action@v1
      with:
        path: .github/workflows/packageVersion
        export-variables: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v4

    - name: Create packages
      run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }} --version-suffix alpha.${{ inputs.version_suffix }}

    - uses: actions/upload-artifact@v4
      with:
        name: packages
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg

  deploy:
    name: Push packages to feed
    runs-on: ubuntu-latest
    needs: [ package ]
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: packages
        path: ${{ env.NuGetDirectory }}

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4

    - name: Publish NuGet package
      run: dotnet nuget push ${{ env.NuGetDirectory }}/*.nupkg --api-key "${{ secrets.GITHUB_TOKEN }}" --source https://nuget.pkg.github.com/MicroDotNet/index.json --skip-duplicate
